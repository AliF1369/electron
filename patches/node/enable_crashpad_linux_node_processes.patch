From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: VerteDinde <keeleymhammond@gmail.com>
Date: Sun, 20 Nov 2022 21:45:20 -0800
Subject: fix: enable crashpad for ELECTRON_RUN_AS_NODE linux processes

Passes the crashpad handler PID and crashdump signal file descriptor
to child processes spawned with `ELECTRON_RUN_AS_NODE` which is used
by the crashpad client to connect with the handler process.

diff --git a/lib/child_process.js b/lib/child_process.js
index 73c1dc769542865bdf7a2a03c16cef141d3f4b05..4c725a991b803c2bfde58b674df15b328102450b 100644
--- a/lib/child_process.js
+++ b/lib/child_process.js
@@ -159,7 +159,6 @@ function fork(modulePath, args = [], options) {
       ArrayPrototypeSplice(execArgv, index - 1, 2);
     }
   }
-
   args = [...execArgv, modulePath, ...args];
 
   if (typeof options.stdio === 'string') {
@@ -613,6 +612,22 @@ function normalizeSpawnArguments(file, args, options) {
                     'options.windowsVerbatimArguments');
   }
 
+  if (process.platform === 'linux') {
+    if (ObjectPrototypeHasOwnProperty(options.env || {}, 'ELECTRON_RUN_AS_NODE') &&
+        (file === process.execPath)) {
+      // On Linux, pass the file descriptor which crashpad server process
+      // uses to monitor the child process.
+      const fd = process.getCrashdumpSignalFD();
+      if (fd !== -1) {
+        options.env.CRASHDUMP_SIGNAL_FD = fd;
+        // On Linux, pass the PID of the crashpad handler process to the child process
+        // which is needed by the crashpad client running in the child process.
+        // https://source.chromium.org/chromium/chromium/src/+/110.0.5415.0:components/crash/core/app/crashpad_linux.cc;l=199-206
+        ArrayPrototypePush(args, `--crashpad-handler-pid=${process.getCrashpadHandlerPID()}`);
+      }
+    }
+  }
+
   if (options.shell) {
     const command = ArrayPrototypeJoin([file, ...args], ' ');
     // Set the shell, switches, and commands.
diff --git a/lib/internal/process/pre_execution.js b/lib/internal/process/pre_execution.js
index 6659f03e9aa45c35d355399597f533ad20232575..c1460d9f12607ecb26b602a15a516f013047f57d 100644
--- a/lib/internal/process/pre_execution.js
+++ b/lib/internal/process/pre_execution.js
@@ -59,6 +59,11 @@ function prepareMainThreadExecution(expandArgv1 = false,
       setupCoverageHooks(process.env.NODE_V8_COVERAGE);
   }
 
+  if (process.env.CRASHDUMP_SIGNAL_FD) {
+    // Make sure it's not accidentally inherited by child processes.
+    delete process.env.CRASHDUMP_SIGNAL_FD;
+  }
+
   setupDebugEnv();
 
   // Print stack trace on `SIGINT` if option `--trace-sigint` presents.
